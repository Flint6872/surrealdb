on:
  workflow_call:
    inputs:
      git-ref:
        required: true
        type: string
        description: "The github ref to checkout for building the Docker images."
      tag-prefix:
        required: true
        type: string
        description: "The prefix of the Docker image tag. i.e. 'nightly' for 'surrealdb/surrealdb:nightly-dev' or 'surrealdb/surrealdb:nightly-fdb'."
      build:
        required: false
        type: boolean
        default: true
        description: "Build the Docker images."
      push:
        required: false
        type: boolean
        default: false
        description: "Publish the Docker images."
      latest:
        required: false
        type: boolean
        default: false
        description: "Update the latest tag of the Docker image."
    secrets:
      DOCKER_USER:
        required: false
      DOCKER_PASS:
        required: false
      AWS_CI_ACCESS_KEY_ID:
        required: false
      AWS_CI_SECRET_ACCESS_KEY:
        required: false

defaults:
  run:
    shell: bash

jobs:
  prepare:
    name: Prepare steps
    runs-on: ubuntu-latest
    outputs:
      with-ecr: ${{ steps.aws-credentials.outputs.with-ecr }}
      tag-prefix: ${{ steps.tag-prefix.outputs.tag-prefix }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

      - name: Check if AWS credentials are set
        id: aws-credentials
        run: |
          if [[ "${{ secrets.AWS_CI_ACCESS_KEY_ID }}" == "" ]]; then
            echo "###"
            echo "### AWS credentials are not set. Will skip any AWS ECR action."
            echo "###"

            echo "with-ecr=false" >> $GITHUB_OUTPUT
          else
            echo "with-ecr=true" >> $GITHUB_OUTPUT
          fi
      - name: Sanitize tag name
        id: tag-prefix
        run: |
          echo "tag-prefix=$(echo '${{ inputs.tag-prefix }}' | sed 's/[^a-zA-Z0-9_.-]/-/g' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
      # Define matrix here so we don't need to search for it when making changes
      - name: Set matrix
        id: set-matrix
        env:
          MATRIX: |
            include:
              # Prod image
              - &base_image
                name: Prod image
                build-target: prod
              # Dev image
              - <<: *base_image
                name: Dev image
                build-target: dev
                tag-suffix: -dev

        run: |
          echo '${{ env.MATRIX }}' > matrix.yaml
          echo "matrix=$(yq -o json -I=0 matrix.yaml)" >> $GITHUB_OUTPUT
          
  docker:
    name: Build ${{ matrix.name }} (${{ matrix.build-target }})
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ inputs.build }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref }}
      
      - name: Checkout docker
        uses: actions/checkout@v4
        with:
          path: _docker

      # Replace docker files. It allows us to test new Dockerfiles with workflow_dispatch and a custom git ref.
      # When triggered by a push or a schedule, this git ref will be the same as 'inputs.git-ref'
      - name: Replace docker files
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          rm -rf docker .dockerignore
          mv _docker/docker .
          mv _docker/.dockerignore .
          rm -rf _docker

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        if: ${{ needs.prepare.outputs.with-ecr == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        if: ${{ needs.prepare.outputs.with-ecr == 'true' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Build Docker image (amd64)
        uses: docker/build-push-action@v5
        with:
          context: artifacts
          load: true
          platforms: linux/amd64
          file: docker/Dockefile
          target: ${{ matrix.build-target }}
          tags: surrealdb-amd64
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Build Docker image (arm64)
        uses: docker/build-push-action@v5
        with:
          context: artifacts
          load: true
          platforms: linux/arm64
          file: docker/Dockefile
          target: ${{ matrix.build-target }}
          tags: surrealdb-arm64
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Test Docker images
        if: ${{ inputs.push }}
        env:
          ARTIFACT_PREFIX: surreal-${{ inputs.tag-prefix }}
        run: |
          docker run -t --rm surrealdb-amd64 version
          docker run -t --rm surrealdb-arm64 version

      - name: Push to ECR CI registry
        uses: docker/build-push-action@v5
        # Push to CI registry only if AWS credentials are set
        if: ${{ needs.prepare.outputs.with-ecr == 'true' }}
        with:
          context: artifacts
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/Dockefile
          target: ${{ matrix.build-target }}
          tags: ${{ steps.login-ecr.outputs.registry }}/surrealdb-ci:${{ inputs.tag-prefix }}${{ matrix.tag-suffix }}-${{ github.run_id }}
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      #########################################
      ###
      ###   Steps when inputs.push == true
      ###
      #########################################

      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        if : ${{ inputs.push }}
        with:
          context: artifacts
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/Dockefile
          target: ${{ matrix.build-target }}
          tags: surrealdb/surrealdb:${{ inputs.tag-prefix }}${{ matrix.tag-suffix }}
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}

      - name: Push to DockerHub (latest)
        uses: docker/build-push-action@v5
        if: ${{ inputs.push && inputs.latest }}
        with:
          context: artifacts
          push: true
          platforms: linux/amd64,linux/arm64
          file: docker/Dockefile
          target: ${{ matrix.build-target }}
          tags: surrealdb/surrealdb:latest${{ matrix.tag-suffix }}
          build-args: |
            ARTIFACT_PREFIX=surreal-${{ inputs.tag-prefix }}
